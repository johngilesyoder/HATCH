{
  "{\"sourceRoot\":\"/Users/john/Sites/hatch/wp-content/themes/hatch/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/john/Sites/hatch/wp-content/themes/hatch\",\"filename\":\"/Users/john/Sites/hatch/wp-content/themes/hatch/gulpfile.babel.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/john/Sites/hatch/wp-content/themes/hatch\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/john/Sites/hatch/wp-content/themes/hatch/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/john/Sites/hatch/wp-content/themes/hatch",
      "filename": "/Users/john/Sites/hatch/wp-content/themes/hatch/gulpfile.babel.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/john/Sites/hatch/wp-content/themes/hatch",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/john/Sites/hatch/wp-content/themes/hatch/gulpfile.babel.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/john/Sites/hatch/wp-content/themes/hatch/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/john/Sites/hatch/wp-content/themes/hatch/",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.build = exports.dev = exports.scripts = exports.copy = exports.watch = exports.images = exports.styles = exports.clean = exports.reload = exports.serve = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpCleanCss = _interopRequireDefault(require(\"gulp-clean-css\"));\n\nvar _gulpIf = _interopRequireDefault(require(\"gulp-if\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _url = require(\"url\");\n\nvar _gulpImagemin = _interopRequireDefault(require(\"gulp-imagemin\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _webpackStream = _interopRequireDefault(require(\"webpack-stream\"));\n\nvar _vinylNamed = _interopRequireDefault(require(\"vinyl-named\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar server = _browserSync[\"default\"].create();\n\nvar PRODUCTION = _yargs[\"default\"].argv.prod;\nvar paths = {\n  styles: {\n    src: 'src/asset/scss/bundle.scss',\n    dest: 'dist/asset/css'\n  },\n  scripts: {\n    src: ['src/asset/js/bundle.js', 'src/asset/js/home.js', 'src/asset/js/becauseofhatch-survey.js', 'src/asset/js/briana-survey.js', 'src/asset/js/hatching-better-world.js', 'src/asset/js/labs-voting.js', 'src/asset/js/registration.js', 'src/asset/js/reunion.js'],\n    dest: 'dist/asset/js'\n  },\n  images: {\n    src: 'src/asset/img/**/*.{gif,jpg,jpeg,png,svg}',\n    dest: 'dist/asset/img'\n  },\n  other: {\n    src: ['src/asset/**/*', '!src/asset/{img,scss,js}', '!src/asset/{img,scss,js}/**/*'],\n    dest: 'dist/asset'\n  }\n};\n\nvar serve = function serve(done) {\n  server.init({\n    proxy: \"http://hatch.build\"\n  });\n  done();\n};\n\nexports.serve = serve;\n\nvar reload = function reload(done) {\n  server.reload();\n  done();\n};\n\nexports.reload = reload;\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])(['dist']);\n};\n\nexports.clean = clean;\n\nvar styles = function styles() {\n  return _gulp[\"default\"].src(paths.styles.src).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].init())).pipe((0, _gulpSass[\"default\"])().on('error', _gulpSass[\"default\"].logError)).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpCleanCss[\"default\"])())).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].write())).pipe(_gulp[\"default\"].dest(paths.styles.dest)).pipe(server.stream());\n};\n\nexports.styles = styles;\n\nvar images = function images() {\n  return _gulp[\"default\"].src(paths.images.src).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpImagemin[\"default\"])())).pipe(_gulp[\"default\"].dest(paths.images.dest));\n};\n\nexports.images = images;\n\nvar watch = function watch() {\n  _gulp[\"default\"].watch('src/asset/scss/**/*.scss', styles);\n\n  _gulp[\"default\"].watch('src/asset/js/**/*.js', _gulp[\"default\"].series(scripts, reload));\n\n  _gulp[\"default\"].watch('**/*.php', reload);\n\n  _gulp[\"default\"].watch(paths.images.src, _gulp[\"default\"].series(images, reload));\n\n  _gulp[\"default\"].watch(paths.other.src, _gulp[\"default\"].series(copy, reload));\n};\n\nexports.watch = watch;\n\nvar copy = function copy() {\n  return _gulp[\"default\"].src(paths.other.src).pipe(_gulp[\"default\"].dest(paths.other.dest));\n};\n\nexports.copy = copy;\n\nvar scripts = function scripts() {\n  return _gulp[\"default\"].src(paths.scripts.src).pipe((0, _vinylNamed[\"default\"])()).pipe((0, _webpackStream[\"default\"])({\n    module: {\n      rules: [{\n        test: /\\.js$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: ['@babel/preset-env']\n          }\n        }\n      }]\n    },\n    output: {\n      filename: '[name].js'\n    },\n    devtool: !PRODUCTION ? 'inline-source-map' : false,\n    mode: PRODUCTION ? 'production' : 'development'\n  })).pipe(_gulp[\"default\"].dest(paths.scripts.dest));\n};\n\nexports.scripts = scripts;\n\nvar dev = _gulp[\"default\"].series(clean, _gulp[\"default\"].parallel(styles, scripts, images, copy), serve, watch);\n\nexports.dev = dev;\n\nvar build = _gulp[\"default\"].series(clean, _gulp[\"default\"].parallel(styles, scripts, images, copy));\n\nexports.build = build;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNlcnZlciIsImJyb3dzZXJTeW5jIiwiY3JlYXRlIiwiUFJPRFVDVElPTiIsInlhcmdzIiwiYXJndiIsInByb2QiLCJwYXRocyIsInN0eWxlcyIsInNyYyIsImRlc3QiLCJzY3JpcHRzIiwiaW1hZ2VzIiwib3RoZXIiLCJzZXJ2ZSIsImRvbmUiLCJpbml0IiwicHJveHkiLCJyZWxvYWQiLCJjbGVhbiIsImd1bHAiLCJwaXBlIiwic291cmNlbWFwcyIsIm9uIiwic2FzcyIsImxvZ0Vycm9yIiwid3JpdGUiLCJzdHJlYW0iLCJ3YXRjaCIsInNlcmllcyIsImNvcHkiLCJtb2R1bGUiLCJydWxlcyIsInRlc3QiLCJ1c2UiLCJsb2FkZXIiLCJvcHRpb25zIiwicHJlc2V0cyIsIm91dHB1dCIsImZpbGVuYW1lIiwiZGV2dG9vbCIsIm1vZGUiLCJkZXYiLCJwYXJhbGxlbCIsImJ1aWxkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBR0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLHdCQUFZQyxNQUFaLEVBQWY7O0FBQ0EsSUFBTUMsVUFBVSxHQUFHQyxrQkFBTUMsSUFBTixDQUFXQyxJQUE5QjtBQUVBLElBQU1DLEtBQUssR0FBRztBQUNaQyxFQUFBQSxNQUFNLEVBQUU7QUFDTkMsSUFBQUEsR0FBRyxFQUFFLDRCQURDO0FBRU5DLElBQUFBLElBQUksRUFBRTtBQUZBLEdBREk7QUFLWkMsRUFBQUEsT0FBTyxFQUFFO0FBQ1BGLElBQUFBLEdBQUcsRUFBRSxDQUFDLHdCQUFELEVBQTJCLHNCQUEzQixFQUFtRCx1Q0FBbkQsRUFBNEYsK0JBQTVGLEVBQTZILHVDQUE3SCxFQUFzSyw2QkFBdEssRUFBcU0sOEJBQXJNLEVBQXFPLHlCQUFyTyxDQURFO0FBRVBDLElBQUFBLElBQUksRUFBRTtBQUZDLEdB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c0JHLE9BQXRCLEVBQStCQyxNQUEvQixFQUF1Q2tCLElBQXZDLENBQW5CLENBQWQ7OztlQUVRWSxHIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qb2huL1NpdGVzL2hhdGNoL3dwLWNvbnRlbnQvdGhlbWVzL2hhdGNoLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnO1xuaW1wb3J0IHlhcmdzIGZyb20gJ3lhcmdzJztcbmltcG9ydCBzYXNzIGZyb20gJ2d1bHAtc2Fzcyc7XG5pbXBvcnQgY2xlYW5DU1MgZnJvbSAnZ3VscC1jbGVhbi1jc3MnO1xuaW1wb3J0IGd1bHBpZiBmcm9tICdndWxwLWlmJztcbmltcG9ydCBzb3VyY2VtYXBzIGZyb20gJ2d1bHAtc291cmNlbWFwcyc7XG5pbXBvcnQge1xuICBmaWxlVVJMVG9QYXRoXG59IGZyb20gJ3VybCc7XG5pbXBvcnQgaW1hZ2VtaW4gZnJvbSAnZ3VscC1pbWFnZW1pbic7XG5pbXBvcnQgZGVsIGZyb20gJ2RlbCc7XG5pbXBvcnQgd2VicGFjayBmcm9tICd3ZWJwYWNrLXN0cmVhbSc7XG5pbXBvcnQgbmFtZWQgZnJvbSAndmlueWwtbmFtZWQnO1xuaW1wb3J0IGJyb3dzZXJTeW5jIGZyb20gJ2Jyb3dzZXItc3luYyc7XG5cbmNvbnN0IHNlcnZlciA9IGJyb3dzZXJTeW5jLmNyZWF0ZSgpO1xuY29uc3QgUFJPRFVDVElPTiA9IHlhcmdzLmFyZ3YucHJvZDtcblxuY29uc3QgcGF0aHMgPSB7XG4gIHN0eWxlczoge1xuICAgIHNyYzogJ3NyYy9hc3NldC9zY3NzL2J1bmRsZS5zY3NzJyxcbiAgICBkZXN0OiAnZGlzdC9hc3NldC9jc3MnXG4gIH0sXG4gIHNjcmlwdHM6IHtcbiAgICBzcmM6IFsnc3JjL2Fzc2V0L2pzL2J1bmRsZS5qcycsICdzcmMvYXNzZXQvanMvaG9tZS5qcycsICdzcmMvYXNzZXQvanMvYmVjYXVzZW9maGF0Y2gtc3VydmV5LmpzJywgJ3NyYy9hc3NldC9qcy9icmlhbmEtc3VydmV5LmpzJywgJ3NyYy9hc3NldC9qcy9oYXRjaGluZy1iZXR0ZXItd29ybGQuanMnLCAnc3JjL2Fzc2V0L2pzL2xhYnMtdm90aW5nLmpzJywgJ3NyYy9hc3NldC9qcy9yZWdpc3RyYXRpb24uanMnLCAnc3JjL2Fzc2V0L2pzL3JldW5pb24uanMnXSxcbiAgICBkZXN0OiAnZGlzdC9hc3NldC9qcydcbiAgfSxcbiAgaW1hZ2VzOiB7XG4gICAgc3JjOiAnc3JjL2Fzc2V0L2ltZy8qKi8qLntnaWYsanBnLGpwZWcscG5nLHN2Z30nLFxuICAgIGRlc3Q6ICdkaXN0L2Fzc2V0L2ltZydcbiAgfSxcbiAgb3RoZXI6IHtcbiAgICBzcmM6IFsnc3JjL2Fzc2V0LyoqLyonLCAnIXNyYy9hc3NldC97aW1nLHNjc3MsanN9JywgJyFzcmMvYXNzZXQve2ltZyxzY3NzLGpzfS8qKi8qJ10sXG4gICAgZGVzdDogJ2Rpc3QvYXNzZXQnXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHNlcnZlID0gKGRvbmUpID0+IHtcbiAgc2VydmVyLmluaXQoe1xuICAgIHByb3h5OiBcImh0dHA6Ly9oYXRjaC5idWlsZFwiXG4gIH0pO1xuICBkb25lKCk7XG59XG5cbmV4cG9ydCBjb25zdCByZWxvYWQgPSAoZG9uZSkgPT4ge1xuICBzZXJ2ZXIucmVsb2FkKCk7XG4gIGRvbmUoKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNsZWFuID0gKCkgPT4gZGVsKFsnZGlzdCddKTtcblxuZXhwb3J0IGNvbnN0IHN0eWxlcyA9ICgpID0+IHtcbiAgcmV0dXJuIGd1bHAuc3JjKHBhdGhzLnN0eWxlcy5zcmMpXG4gICAgLnBpcGUoZ3VscGlmKCFQUk9EVUNUSU9OLCBzb3VyY2VtYXBzLmluaXQoKSkpXG4gICAgLnBpcGUoc2FzcygpLm9uKCdlcnJvcicsIHNhc3MubG9nRXJyb3IpKVxuICAgIC5waXBlKGd1bHBpZihQUk9EVUNUSU9OLCBjbGVhbkNTUygpKSlcbiAgICAucGlwZShndWxwaWYoIVBST0RVQ1RJT04sIHNvdXJjZW1hcHMud3JpdGUoKSkpXG4gICAgLnBpcGUoZ3VscC5kZXN0KHBhdGhzLnN0eWxlcy5kZXN0KSlcbiAgICAucGlwZShzZXJ2ZXIuc3RyZWFtKCkpO1xufVxuXG5leHBvcnQgY29uc3QgaW1hZ2VzID0gKCkgPT4ge1xuICByZXR1cm4gZ3VscC5zcmMocGF0aHMuaW1hZ2VzLnNyYylcbiAgICAucGlwZShndWxwaWYoUFJPRFVDVElPTiwgaW1hZ2VtaW4oKSkpXG4gICAgLnBpcGUoZ3VscC5kZXN0KHBhdGhzLmltYWdlcy5kZXN0KSlcbn1cblxuZXhwb3J0IGNvbnN0IHdhdGNoID0gKCkgPT4ge1xuICBndWxwLndhdGNoKCdzcmMvYXNzZXQvc2Nzcy8qKi8qLnNjc3MnLCBzdHlsZXMpO1xuICBndWxwLndhdGNoKCdzcmMvYXNzZXQvanMvKiovKi5qcycsIGd1bHAuc2VyaWVzKHNjcmlwdHMsIHJlbG9hZCkpO1xuICBndWxwLndhdGNoKCcqKi8qLnBocCcsIHJlbG9hZCk7XG4gIGd1bHAud2F0Y2gocGF0aHMuaW1hZ2VzLnNyYywgZ3VscC5zZXJpZXMoaW1hZ2VzLCByZWxvYWQpKTtcbiAgZ3VscC53YXRjaChwYXRocy5vdGhlci5zcmMsIGd1bHAuc2VyaWVzKGNvcHksIHJlbG9hZCkpO1xufVxuXG5leHBvcnQgY29uc3QgY29weSA9ICgpID0+IHtcbiAgcmV0dXJuIGd1bHAuc3JjKHBhdGhzLm90aGVyLnNyYylcbiAgICAucGlwZShndWxwLmRlc3QocGF0aHMub3RoZXIuZGVzdCkpO1xufVxuXG5leHBvcnQgY29uc3Qgc2NyaXB0cyA9ICgpID0+IHtcbiAgcmV0dXJuIGd1bHAuc3JjKHBhdGhzLnNjcmlwdHMuc3JjKVxuICAgIC5waXBlKG5hbWVkKCkpXG4gICAgLnBpcGUod2VicGFjayh7XG4gICAgICBtb2R1bGU6IHtcbiAgICAgICAgcnVsZXM6IFt7XG4gICAgICAgICAgdGVzdDogL1xcLmpzJC8sXG4gICAgICAgICAgdXNlOiB7XG4gICAgICAgICAgICBsb2FkZXI6ICdiYWJlbC1sb2FkZXInLFxuICAgICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICBwcmVzZXRzOiBbJ0BiYWJlbC9wcmVzZXQtZW52J11cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1dXG4gICAgICB9LFxuICAgICAgb3V0cHV0OiB7XG4gICAgICAgIGZpbGVuYW1lOiAnW25hbWVdLmpzJ1xuICAgICAgfSxcbiAgICAgIGRldnRvb2w6ICFQUk9EVUNUSU9OID8gJ2lubGluZS1zb3VyY2UtbWFwJyA6IGZhbHNlLFxuICAgICAgbW9kZTogUFJPRFVDVElPTiA/ICdwcm9kdWN0aW9uJyA6ICdkZXZlbG9wbWVudCdcbiAgICB9KSlcbiAgICAucGlwZShndWxwLmRlc3QocGF0aHMuc2NyaXB0cy5kZXN0KSk7XG59XG5cblxuZXhwb3J0IGNvbnN0IGRldiA9IGd1bHAuc2VyaWVzKGNsZWFuLCBndWxwLnBhcmFsbGVsKHN0eWxlcywgc2NyaXB0cywgaW1hZ2VzLCBjb3B5KSwgc2VydmUsIHdhdGNoKTtcblxuZXhwb3J0IGNvbnN0IGJ1aWxkID0gZ3VscC5zZXJpZXMoY2xlYW4sIGd1bHAucGFyYWxsZWwoc3R5bGVzLCBzY3JpcHRzLCBpbWFnZXMsIGNvcHkpKTtcblxuZXhwb3J0IGRlZmF1bHQgZGV2Il19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "server",
        "browserSync",
        "create",
        "PRODUCTION",
        "yargs",
        "argv",
        "prod",
        "paths",
        "styles",
        "src",
        "dest",
        "scripts",
        "images",
        "other",
        "serve",
        "done",
        "init",
        "proxy",
        "reload",
        "clean",
        "gulp",
        "pipe",
        "sourcemaps",
        "on",
        "sass",
        "logError",
        "write",
        "stream",
        "watch",
        "series",
        "copy",
        "module",
        "rules",
        "test",
        "use",
        "loader",
        "options",
        "presets",
        "output",
        "filename",
        "devtool",
        "mode",
        "dev",
        "parallel",
        "build"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/john/Sites/hatch/wp-content/themes/hatch/",
      "sourcesContent": [
        "import gulp from 'gulp';\nimport yargs from 'yargs';\nimport sass from 'gulp-sass';\nimport cleanCSS from 'gulp-clean-css';\nimport gulpif from 'gulp-if';\nimport sourcemaps from 'gulp-sourcemaps';\nimport {\n  fileURLToPath\n} from 'url';\nimport imagemin from 'gulp-imagemin';\nimport del from 'del';\nimport webpack from 'webpack-stream';\nimport named from 'vinyl-named';\nimport browserSync from 'browser-sync';\n\nconst server = browserSync.create();\nconst PRODUCTION = yargs.argv.prod;\n\nconst paths = {\n  styles: {\n    src: 'src/asset/scss/bundle.scss',\n    dest: 'dist/asset/css'\n  },\n  scripts: {\n    src: ['src/asset/js/bundle.js', 'src/asset/js/home.js', 'src/asset/js/becauseofhatch-survey.js', 'src/asset/js/briana-survey.js', 'src/asset/js/hatching-better-world.js', 'src/asset/js/labs-voting.js', 'src/asset/js/registration.js', 'src/asset/js/reunion.js'],\n    dest: 'dist/asset/js'\n  },\n  images: {\n    src: 'src/asset/img/**/*.{gif,jpg,jpeg,png,svg}',\n    dest: 'dist/asset/img'\n  },\n  other: {\n    src: ['src/asset/**/*', '!src/asset/{img,scss,js}', '!src/asset/{img,scss,js}/**/*'],\n    dest: 'dist/asset'\n  }\n}\n\nexport const serve = (done) => {\n  server.init({\n    proxy: \"http://hatch.build\"\n  });\n  done();\n}\n\nexport const reload = (done) => {\n  server.reload();\n  done();\n}\n\nexport const clean = () => del(['dist']);\n\nexport const styles = () => {\n  return gulp.src(paths.styles.src)\n    .pipe(gulpif(!PRODUCTION, sourcemaps.init()))\n    .pipe(sass().on('error', sass.logError))\n    .pipe(gulpif(PRODUCTION, cleanCSS()))\n    .pipe(gulpif(!PRODUCTION, sourcemaps.write()))\n    .pipe(gulp.dest(paths.styles.dest))\n    .pipe(server.stream());\n}\n\nexport const images = () => {\n  return gulp.src(paths.images.src)\n    .pipe(gulpif(PRODUCTION, imagemin()))\n    .pipe(gulp.dest(paths.images.dest))\n}\n\nexport const watch = () => {\n  gulp.watch('src/asset/scss/**/*.scss', styles);\n  gulp.watch('src/asset/js/**/*.js', gulp.series(scripts, reload));\n  gulp.watch('**/*.php', reload);\n  gulp.watch(paths.images.src, gulp.series(images, reload));\n  gulp.watch(paths.other.src, gulp.series(copy, reload));\n}\n\nexport const copy = () => {\n  return gulp.src(paths.other.src)\n    .pipe(gulp.dest(paths.other.dest));\n}\n\nexport const scripts = () => {\n  return gulp.src(paths.scripts.src)\n    .pipe(named())\n    .pipe(webpack({\n      module: {\n        rules: [{\n          test: /\\.js$/,\n          use: {\n            loader: 'babel-loader',\n            options: {\n              presets: ['@babel/preset-env']\n            }\n          }\n        }]\n      },\n      output: {\n        filename: '[name].js'\n      },\n      devtool: !PRODUCTION ? 'inline-source-map' : false,\n      mode: PRODUCTION ? 'production' : 'development'\n    }))\n    .pipe(gulp.dest(paths.scripts.dest));\n}\n\n\nexport const dev = gulp.series(clean, gulp.parallel(styles, scripts, images, copy), serve, watch);\n\nexport const build = gulp.series(clean, gulp.parallel(styles, scripts, images, copy));\n\nexport default dev"
      ]
    },
    "sourceType": "script",
    "mtime": 1606157867313
  }
}